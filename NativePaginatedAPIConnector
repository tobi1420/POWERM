let
    // API credentials and initial URL setup
    apiKey = "your_api_key",  // Replace with your actual API Key
    baseUrl = "https://api.hubapi.com/crm/v3/objects/companies",
    
    // Function to fetch a single page of data
    FetchPage = (after as text) =>
    let
        url = if after <> "" then baseUrl & "?after=" & after 
              else baseUrl,
        // Adding the Authorization header with Bearer token
        headers = [
            Authorization = "Bearer " & apiKey
        ],
        Source = Json.Document(Web.Contents(url, [Headers = headers])),
        results = Source[results],
        nextLink = try Source[paging][next][after] otherwise null
    in
        [Data = results, NextAfter = nextLink],

    // Recursive function to handle pagination, limiting to 3 pages
    FetchLimitedPages = (after as text, accumulator as list, pageCount as number) =>
    let
        // Check if we've already fetched 3 pages
        result = if pageCount >= 3 then accumulator
                 else 
                    let
                        page = FetchPage(after),
                        currentData = page[Data],
                        nextAfter = page[NextAfter],
                        allData = List.Combine({accumulator, currentData}),
                        // Call recursively with the updated `pageCount` and `nextAfter`
                        nextResult = if nextAfter <> null then @FetchLimitedPages(nextAfter, allData, pageCount + 1) else allData
                    in
                        nextResult
    in
        result,

    // Start the fetch process with an empty `after` parameter, an empty accumulator, and a page count of 0
    allData = FetchLimitedPages("", {}, 0),

    // Convert the list to a table
    dataTable = Table.FromList(allData, Splitter.SplitByNothing(), null, null, ExtraValues.Error)
in
    dataTable
